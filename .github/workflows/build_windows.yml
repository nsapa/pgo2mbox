name: "Build a Windows for CI"

# Controls when the action will run.
on:
  # Triggers the workflow on push but only for the main branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  windows-ci:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: update pip
      run: python -m pip install -U pip

    - name: install pip prereq
      run: python -m pip install -U cx_Freeze 

    - name: create the build directory
      run: mkdir build

    - name: build the executable
      run: python win32_build.py build_exe --include-msvcr=True --build-exe=build

    - name: get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(git rev-parse --short HEAD)
      shell: bash

    - name: compress the built file
      run: 7za a pgo2mbox_Windows_${{ steps.get_version.outputs.VERSION }}.zip build/*

    - name: upload built executable
      uses: actions/upload-artifact@v3
      with:
          name: pgo2mbox for Windows build ${{ steps.get_version.outputs.VERSION }}
          path: pgo2mbox_Windows_${{ steps.get_version.outputs.VERSION }}.zip
          if-no-files-found: error

---
name: "Build a Windows release"

on:
  push:
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  windows-release:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: update pip
      run: python -m pip install -U pip

    - name: install pip prereq
      run: python -m pip install -U cx_Freeze 

    - name: build the executable
      run: python win32_build.py build_exe --include-msvcr=True --build-exe=build

    - name: get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      shell: bash

    - name: compress the built file
      run: 7za a pgo2mbox_Windows_${{ steps.get_version.outputs.VERSION }}.zip build/*

    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            prerelease: false
            files: pgo2mbox_Windows_${{ steps.get_version.outputs.VERSION }}.zip
            
